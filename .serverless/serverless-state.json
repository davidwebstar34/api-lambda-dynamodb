{
  "service": {
    "service": "api-lambda-dynamodb",
    "serviceObject": {
      "name": "api-lambda-dynamodb"
    },
    "provider": {
      "stage": "dev",
      "region": "eu-west-1",
      "variableSyntax": "\\${([ :a-zA-Z0-9._,\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs6.10",
      "memorySize": 128,
      "timeout": 30,
      "profile": "dev",
      "versionFunctions": false,
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:GetItem",
            "dynamodb:PutItem"
          ],
          "Resource": "arn:aws:dynamodb:*:*:table/SERVICE_LIST"
        }
      ],
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "GetDynamoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-lambda-dynamodb-dev-getDynamo"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "api-lambda-dynamodb",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-lambda-dynamodb-dev-getDynamo:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-lambda-dynamodb-dev-getDynamo:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetItem",
                          "dynamodb:PutItem"
                        ],
                        "Resource": "arn:aws:dynamodb:*:*:table/SERVICE_LIST"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "api-lambda-dynamodb",
                    "dev",
                    "eu-west-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetDynamoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-lambda-dynamodb/dev/1512393125169-2017-12-04T13:12:05.169Z/api-lambda-dynamodb.zip"
              },
              "FunctionName": "api-lambda-dynamodb-dev-getDynamo",
              "Handler": "GetDynamo.handler",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 30
            },
            "DependsOn": [
              "GetDynamoLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-api-lambda-dynamodb"
            }
          },
          "ApiGatewayResourceService": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "service",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServiceServicenameVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceService"
              },
              "PathPart": "{serviceName}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServiceServicenameVarEnvironmentnameVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceServiceServicenameVar"
              },
              "PathPart": "{environmentName}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodServiceServicenameVarEnvironmentnameVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceServiceServicenameVarEnvironmentnameVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDynamoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1512393125178": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodServiceServicenameVarEnvironmentnameVarGet"
            ]
          },
          "GetDynamoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDynamoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "TodosDynamoDbTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "SERVICE_NAME",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "ENVIRONMENT_NAME",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "VERSION_ID",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "SERVICE_NAME",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "ENVIRONMENT_NAME",
                  "KeyType": "RANGE"
                }
              ],
              "LocalSecondaryIndexes": [
                {
                  "IndexName": "VersionEnvironment",
                  "KeySchema": [
                    {
                      "AttributeName": "SERVICE_NAME",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "VERSION_ID",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "KEYS_ONLY"
                  }
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "SERVICE_LIST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.eu-west-1.amazonaws.com/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "functions": {
      "getDynamo": {
        "handler": "GetDynamo.handler",
        "events": [
          {
            "http": {
              "path": "service/{serviceName}/{environmentName}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-lambda-dynamodb-dev-getDynamo",
        "package": {},
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "TodosDynamoDbTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "SERVICE_NAME",
                "AttributeType": "S"
              },
              {
                "AttributeName": "ENVIRONMENT_NAME",
                "AttributeType": "S"
              },
              {
                "AttributeName": "VERSION_ID",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "SERVICE_NAME",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "ENVIRONMENT_NAME",
                "KeyType": "RANGE"
              }
            ],
            "LocalSecondaryIndexes": [
              {
                "IndexName": "VersionEnvironment",
                "KeySchema": [
                  {
                    "AttributeName": "SERVICE_NAME",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "VERSION_ID",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "KEYS_ONLY"
                }
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "TableName": "SERVICE_LIST"
          }
        }
      },
      "Outputs": {}
    },
    "artifact": "/home/davidw/Projects/Godzilla/api-lambda-dynamodb/.serverless/api-lambda-dynamodb.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/api-lambda-dynamodb/dev/1512393125169-2017-12-04T13:12:05.169Z",
    "artifact": "api-lambda-dynamodb.zip"
  }
}